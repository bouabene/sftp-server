IN  <Buffer 00 00 00 05 01 00 00 00 03>
IN  INIT [ 3 ]
OUT <Buffer 00 00 00 5f 02 00 00 00 03 00 00 00 18 70 6f 73 69 78 2d 72 65 6e 61 6d 65 40 6f 70 65 6e 73 73 68 2e 63 6f 6d 00 00 00 01 31 00 00 00 13 73 74 61 74 76 66 73 40 6f 70 65 6e 73 73 68 2e 63 6f 6d 00 00 00 01 32 00 00 00 14 66 73 74 61 74 76 66 73 40 6f 70 65 6e 73 73 68 2e 63 6f 6d 00 00 00 01 32>
OUT VERSION [ 3,
  { 'posix-rename@openssh.com': '1',
    'statvfs@openssh.com': '2',
    'fstatvfs@openssh.com': '2' } ]
IN  <Buffer 00 00 00 0a 11 00 00 00 00 00 00 00 01 2e>
IN  STAT [ 0, '.' ]
OUT <Buffer 00 00 00 25 69 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 10 00 00 00 03 e8 00 00 03 e8 00 00 41 ed 4d 7f 35 f7 4d 7f 35 f1>
OUT ATTRS [ 0,
  { size: 4096,
    uid: 1000,
    gid: 1000,
    permissions: 16877,
    atime: 1300182519,
    mtime: 1300182513 } ]
IN  <Buffer 00 00 00 10 07 00 00 00 01 00 00 00 07 73 66 74 70 2e 6a 73>
IN  LSTAT [ 1, 'sftp.js' ]
OUT <Buffer 00 00 00 25 69 00 00 00 01 00 00 00 0f 00 00 00 00 00 00 11 f2 00 00 03 e8 00 00 03 e8 00 00 81 a4 4d 7f 35 f1 4d 7f 35 f1>
OUT ATTRS [ 1,
  { size: 4594,
    uid: 1000,
    gid: 1000,
    permissions: 33188,
    atime: 1300182513,
    mtime: 1300182513 } ]
IN  <Buffer 00 00 00 1c 03 00 00 00 02 00 00 00 07 73 66 74 70 2e 6a 73 00 00 00 01 00 00 00 04 00 00 00 00 00 00 00 10 07 00 00 00 03 00 00 00 07 73 66 74 70 2e 6a 73>
IN  OPEN [ 2, 'sftp.js', 1, { permissions: 0 } ]
IN  LSTAT [ 3, 'sftp.js' ]
OUT <Buffer 00 00 00 0d 66 00 00 00 02 00 00 00 04 00 00 00 00 00 00 00 25 69 00 00 00 03 00 00 00 0f 00 00 00 00 00 00 11 f2 00 00 03 e8 00 00 03 e8 00 00 81 a4 4d 7f 35 f1 4d 7f 35 f1>
OUT HANDLE [ 2, '\u0000\u0000\u0000\u0000' ]
OUT ATTRS [ 3,
  { size: 4594,
    uid: 1000,
    gid: 1000,
    permissions: 33188,
    atime: 1300182513,
    mtime: 1300182513 } ]
IN  <Buffer 00 00 00 19 05 00 00 00 04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00>
IN  READ [ 4, '\u0000\u0000\u0000\u0000', 0, 8192 ]
OUT <Buffer 00 00 11 fb 67 00 00 00 04 00 00 11 f2 76 61 72 20 4e 65 74 20 3d 20 72 65 71 75 69 72 65 28 27 6e 65 74 27 29 2c 0a 20 20 20 20 43 68 69 6c 64 50 72 6f 63 65 73 73 20 3d 20 72 65 71 75 69 72 65 28 27 63 68 69 6c 64 5f 70 72 6f 63 65 73 73 27 29 2c 0a 20 20 20 20 55 74 69 6c 20 3d 20 72 65 71 75 69 72 65 28 27 75 74 69 6c 27 29 2c 0a 20 20 20 20 46 73 20 3d 20 72 65 71 75 69 72 65 28 27 66 73 27 29 2c 0a 20 20 20 20 45 76 65 6e 74 45 6d 69 74 74 65 72 20 3d 20 72 65 71 75 69 72 65 28 27 65 76 65 6e 74 73 27 29 2e 45 76 65 6e 74 45 6d 69 74 74 65 72 2c 0a 20 20 20 20 63 72 65 61 74 65 50 61 72 73 65 72 20 3d 20 72 65 71 75 69 72 65 28 27 2e 2f 70 61 72 73 65 72 27 29 2c 0a 20 20 20 20 65 6e 63 6f 64 65 20 3d 20 72 65 71 75 69 72 65 28 27 2e 2f 65 6e 63 6f 64 65 72 27 29 3b 0a 65 76 61 6c 28 72 65 71 75 69 72 65 28 27 2e 2f 63 6f 6e 73 74 61 6e 74 73 27 29 29 3b 0a 0a 2f 2f 20 50 72 6f 78 79 20 74 6f 20 72 65 61 6c 20 73 66 74 70 20 73 65 72 76 65 72 20 61 6e 64 20 74 72 61 63 65 20 63 6f 6e 76 65 72 73 61 74 69 6f 6e 0a 66 75 6e 63 74 69 6f 6e 20 70 72 6f 78 79 28 63 6c 69 65 6e 74 29 20 7b 0a 20 20 76 61 72 20 63 68 69 6c 64 20 3d 20 43 68 69 6c 64 50 72 6f 63 65 73 73 2e 73 70 61 77 6e 28 22 2f 75 73 72 2f 6c 69 62 2f 6f 70 65 6e 73 73 68 2f 73 66 74 70 2d 73 65 72 76 65 72 22 2c 20 5b 22 2d 65 22 5d 29 3b 0a 20 20 63 6c 69 65 6e 74 2e 70 69 70 65 28 63 68 69 6c 64 2e 73 74 64 69 6e 29 3b 0a 20 20 63 68 69 6c 64 2e 73 74 64 6f 75 74 2e 70 69 70 65 28 63 6c 69 65 6e 74 29 3b 0a 20 20 63 6c 69 65 6e 74 2e 6f 6e 28 27 64 61 74 61 27 2c 20 66 75 6e 63 74 69 6f 6e 20 28 63 68 75 6e 6b 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 49 4e 20 20 22 20 2b 20 63 68 75 6e 6b 2e 69 6e 73 70 65 63 74 28 29 29 3b 0a 20 20 7d 29 3b 0a 20 20 63 68 69 6c 64 2e 73 74 64 65 72 72 2e 70 69 70 65 28 70 72 6f 63 65 73 73 2e 73 74 64 6f 75 74 2c 20 7b 20 65 6e 64 3a 20 66 61 6c 73 65 20 7d 29 3b 0a 20 20 63 72 65 61 74 65 50 61 72 73 65 72 28 63 6c 69 65 6e 74 2c 20 66 75 6e 63 74 69 6f 6e 20 28 74 79 70 65 2c 20 61 72 67 73 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 49 4e 20 20 22 20 2b 20 46 58 50 5f 4c 4f 4f 4b 55 50 5b 74 79 70 65 5d 20 2b 20 22 20 22 20 2b 20 55 74 69 6c 2e 69 6e 73 70 65 63 74 28 61 72 67 73 2c 20 66 61 6c 73 65 2c 20 33 29 29 3b 0a 20 20 7d 29 3b 0a 20 20 63 68 69 6c 64 2e 73 74 64 6f 75 74 2e 6f 6e 28 27 64 61 74 61 27 2c 20 66 75 6e 63 74 69 6f 6e 20 28 63 68 75 6e 6b 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 4f 55 54 20 22 20 2b 20 63 68 75 6e 6b 2e 69 6e 73 70 65 63 74 28 29 29 3b 0a 20 20 7d 29 3b 0a 20 20 63 72 65 61 74 65 50 61 72 73 65 72 28 63 68 69 6c 64 2e 73 74 64 6f 75 74 2c 20 66 75 6e 63 74 69 6f 6e 20 28 74 79 70 65 2c 20 61 72 67 73 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 4f 55 54 20 22 20 2b 20 46 58 50 5f 4c 4f 4f 4b 55 50 5b 74 79 70 65 5d 20 2b 20 22 20 22 20 2b 20 55 74 69 6c 2e 69 6e 73 70 65 63 74 28 61 72 67 73 2c 20 66 61 6c 73 65 2c 20 33 29 29 3b 0a 20 20 7d 29 3b 0a 7d 0a 0a 66 75 6e 63 74 69 6f 6e 20 72 65 61 6c 28 63 6c 69 65 6e 74 29 20 7b 0a 20 20 76 61 72 20 73 63 6f 70 65 20 3d 20 7b 0a 20 20 20 20 73 65 6e 64 3a 20 66 75 6e 63 74 69 6f 6e 20 73 65 6e 64 28 74 79 70 65 29 20 7b 0a 20 20 20 20 20 20 76 61 72 20 61 72 67 73 20 3d 20 41 72 72 61 79 2e 70 72 6f 74 6f 74 79 70 65 2e 73 6c 69 63 65 2e 63 61 6c 6c 28 61 72 67 75 6d 65 6e 74 73 2c 20 31 29 3b 0a 20 20 20 20 20 20 76 61 72 20 63 68 75 6e 6b 20 3d 20 65 6e 63 6f 64 65 28 74 79 70 65 2c 20 61 72 67 73 29 3b 0a 20 20 20 20 20 20 6f 75 74 70 75 74 2e 65 6d 69 74 28 27 64 61 74 61 27 2c 20 63 68 75 6e 6b 29 3b 0a 20 20 20 20 7d 2c 0a 20 20 20 20 73 74 61 74 75 73 3a 20 66 75 6e 63 74 69 6f 6e 20 73 74 61 74 75 73 28 69 64 2c 20 63 6f 64 65 2c 20 6d 65 73 73 61 67 65 29 20 7b 0a 20 20 20 20 20 20 73 63 6f 70 65 2e 73 65 6e 64 28 46 58 50 5f 53 54 41 54 55 53 2c 20 69 64 2c 20 63 6f 64 65 2c 20 6d 65 73 73 61 67 65 2c 20 22 22 29 3b 0a 20 20 20 20 7d 2c 0a 20 20 20 20 65 72 72 6f 72 3a 20 66 75 6e 63 74 69 6f 6e 20 65 72 72 6f 72 28 69 64 2c 20 65 72 72 29 20 7b 0a 20 20 20 20 20 20 76 61 72 20 63 6f 64 65 3b 0a 20 20 20 20 20 20 73 77 69 74 63 68 20 28 65 72 72 2e 63 6f 64 65 29 20 7b 0a 20 20 20 20 20 20 20 20 63 61 73 65 20 22 45 4e 4f 45 4e 54 22 3a 20 63 6f 64 65 20 3d 20 46 58 5f 4e 4f 5f 53 55 43 48 5f 46 49 4c 45 3b 20 62 72 65 61 6b 3b 20 0a 20 20 20 20 20 20 20 20 63 61 73 65 20 22 45 41 43 43 45 53 22 3a 20 63 6f 64 65 20 3d 20 46 58 5f 50 45 52 4d 49 53 53 49 4f 4e 5f 44 45 4e 49 45 44 3b 20 62 72 65 61 6b 3b 0a 20 20 20 20 20 20 20 20 64 65 66 61 75 6c 74 3a 20 63 6f 64 65 20 3d 20 46 58 5f 46 41 49 4c 55 52 45 3b 0a 20 20 20 20 20 20 7d 0a 20 20 20 20 20 20 73 63 6f 70 65 2e 73 65 6e 64 28 46 58 50 5f 53 54 41 54 55 53 2c 20 69 64 2c 20 63 6f 64 65 2c 20 65 72 72 2e 6d 65 73 73 61 67 65 2c 20 22 22 29 3b 0a 20 20 20 20 7d 0a 20 20 7d 3b 0a 20 20 76 61 72 20 6f 75 74 70 75 74 20 3d 20 6e 65 77 20 45 76 65 6e 74 45 6d 69 74 74 65 72 28 29 3b 0a 20 20 0a 20 20 63 6c 69 65 6e 74 2e 6f 6e 28 27 64 61 74 61 27 2c 20 66 75 6e 63 74 69 6f 6e 20 28 63 68 75 6e 6b 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 49 4e 20 20 22 20 2b 20 63 68 75 6e 6b 2e 69 6e 73 70 65 63 74 28 29 29 3b 0a 20 20 7d 29 3b 0a 20 20 6f 75 74 70 75 74 2e 6f 6e 28 27 64 61 74 61 27 2c 20 66 75 6e 63 74 69 6f 6e 20 28 63 68 75 6e 6b 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 4f 55 54 20 22 20 2b 20 63 68 75 6e 6b 2e 69 6e 73 70 65 63 74 28 29 29 3b 0a 20 20 20 20 63 6c 69 65 6e 74 2e 77 72 69 74 65 28 63 68 75 6e 6b 29 3b 0a 20 20 7d 29 3b 0a 20 20 63 72 65 61 74 65 50 61 72 73 65 72 28 6f 75 74 70 75 74 2c 20 66 75 6e 63 74 69 6f 6e 20 28 74 79 70 65 2c 20 61 72 67 73 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 4f 55 54 20 22 20 2b 20 46 58 50 5f 4c 4f 4f 4b 55 50 5b 74 79 70 65 5d 20 2b 20 22 20 22 20 2b 20 55 74 69 6c 2e 69 6e 73 70 65 63 74 28 61 72 67 73 2c 20 66 61 6c 73 65 2c 20 33 29 29 3b 0a 20 20 7d 29 3b 0a 20 20 63 72 65 61 74 65 50 61 72 73 65 72 28 63 6c 69 65 6e 74 2c 20 66 75 6e 63 74 69 6f 6e 20 28 74 79 70 65 2c 20 61 72 67 73 29 20 7b 0a 20 20 20 20 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 49 4e 20 20 22 20 2b 20 46 58 50 5f 4c 4f 4f 4b 55 50 5b 74 79 70 65 5d 20 2b 20 22 20 22 20 2b 20 55 74 69 6c 2e 69 6e 73 70 65 63 74 28 61 72 67 73 2c 20 66 61 6c 73 65 2c 20 33 29 29 3b 0a 20 20 20 20 76 61 72 20 74 79 70 65 4e 61 6d 65 20 3d 20 46 58 50 5f 4c 4f 4f 4b 55 50 5b 74 79 70 65 5d 3b 0a 20 20 20 20 69 66 20 28 48 61 6e 64 6c 65 72 73 2e 68 61 73 4f 77 6e 50 72 6f 70 65 72 74 79 28 74 79 70 65 4e 61 6d 65 29 29 20 7b 0a 20 20 20 20 20 20 48 61 6e 64 6c 65 72 73 5b 74 79 70 65 4e 61 6d 65 5d 2e 61 70 70 6c 79 28 73 63 6f 70 65 2c 20 61 72 67 73 29 3b 0a 20 20 20 20 7d 20 65 6c 73 65 20 7b 0a 20 20 20 20 20 20 74 68 72 6f 77 20 6e 65 77 20 45 72 72 6f 72 28 22 55 6e 6b 6e 6f 77 6e 20 74 79 70 65 20 22 20 2b 20 74 79 70 65 4e 61 6d 65 29 3b 0a 20 20 20 20 7d 0a 20 20 20 20 0a 20 20 7d 29 3b 0a 7d 0a 0a 76 61 72 20 48 61 6e 64 6c 65 72 73 20 3d 20 7b 0a 20 20 49 4e 49 54 3a 20 66 75 6e 63 74 69 6f 6e 20 28 76 65 72 73 69 6f 6e 29 20 7b 0a 20 20 20 20 69 66 20 28 76 65 72 73 69 6f 6e 20 21 3d 3d 20 33 29 20 7b 20 74 68 72 6f 77 20 6e 65 77 20 45 72 72 6f 72 28 22 49 6e 76 61 6c 69 64 20 63 6c 69 65 6e 74 20 76 65 72 73 69 6f 6e 20 22 20 2b 20 76 65 72 73 69 6f 6e 29 3b 20 7d 0a 20 20 20 20 74 68 69 73 2e 73 65 6e 64 28 46 58 50 5f 56 45 52 53 49 4f 4e 2c 20 33 2c 20 7b 22 74 69 6d 40 63 72 65 61 74 69 6f 6e 69 78 2e 63 6f 6d 22 3a 22 31 22 7d 29 3b 0a 20 20 7d 2c 0a 20 20 53 54 41 54 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 70 61 74 68 29 20 7b 0a 20 20 20 20 76 61 72 20 73 65 6c 66 20 3d 20 74 68 69 73 3b 0a 20 20 20 20 46 73 2e 73 74 61 74 28 70 61 74 68 2c 20 66 75 6e 63 74 69 6f 6e 20 28 65 72 72 2c 20 73 74 61 74 29 20 7b 0a 20 20 20 20 20 20 69 66 20 28 65 72 72 29 20 7b 20 73 65 6c 66 2e 65 72 72 6f 72 28 69 64 2c 20 65 72 72 29 3b 20 7d 0a 20 20 20 20 20 20 65 6c 73 65 20 7b 20 73 65 6c 66 2e 73 65 6e 64 28 46 58 50 5f 41 54 54 52 53 2c 20 69 64 2c 20 73 74 61 74 29 3b 20 7d 0a 20 20 20 20 7d 29 3b 0a 20 20 7d 2c 0a 20 20 4c 53 54 41 54 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 70 61 74 68 29 20 7b 0a 20 20 20 20 76 61 72 20 73 65 6c 66 20 3d 20 74 68 69 73 3b 0a 20 20 20 20 46 73 2e 6c 73 74 61 74 28 70 61 74 68 2c 20 66 75 6e 63 74 69 6f 6e 20 28 65 72 72 2c 20 73 74 61 74 29 20 7b 0a 20 20 20 20 20 20 69 66 20 28 65 72 72 29 20 7b 20 73 65 6c 66 2e 65 72 72 6f 72 28 69 64 2c 20 65 72 72 29 3b 20 7d 0a 20 20 20 20 20 20 65 6c 73 65 20 7b 20 73 65 6c 66 2e 73 65 6e 64 28 46 58 50 5f 41 54 54 52 53 2c 20 69 64 2c 20 73 74 61 74 29 3b 20 7d 0a 20 20 20 20 7d 29 3b 0a 20 20 7d 2c 0a 20 20 4f 50 45 4e 44 49 52 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 70 61 74 68 29 20 7b 0a 20 20 20 20 76 61 72 20 68 61 6e 64 6c 65 20 3d 20 67 65 74 48 61 6e 64 6c 65 28 70 61 74 68 29 3b 0a 20 20 20 20 74 68 69 73 2e 73 65 6e 64 28 46 58 50 5f 48 41 4e 44 4c 45 2c 20 69 64 2c 20 68 61 6e 64 6c 65 29 3b 0a 20 20 7d 2c 0a 20 20 52 45 41 44 44 49 52 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 68 61 6e 64 6c 65 29 20 7b 0a 20 20 20 20 69 66 20 28 21 68 61 6e 64 6c 65 73 2e 68 61 73 4f 77 6e 50 72 6f 70 65 72 74 79 28 68 61 6e 64 6c 65 29 29 20 7b 20 74 68 72 6f 77 20 6e 65 77 20 45 72 72 6f 72 28 22 49 6e 76 61 6c 69 64 20 48 61 6e 64 6c 65 20 22 20 2b 20 4a 53 4f 4e 2e 73 74 72 69 6e 67 69 66 79 28 68 61 6e 64 6c 65 29 29 3b 20 7d 0a 20 20 20 20 76 61 72 20 70 61 74 68 20 3d 20 68 61 6e 64 6c 65 73 5b 68 61 6e 64 6c 65 5d 3b 0a 20 20 20 20 69 66 20 28 70 61 74 68 20 3d 3d 3d 20 6e 75 6c 6c 29 20 7b 0a 20 20 20 20 20 20 74 68 69 73 2e 73 74 61 74 75 73 28 69 64 2c 20 46 58 5f 45 4f 46 2c 20 22 45 6e 64 20 6f 66 20 66 69 6c 65 22 29 3b 0a 20 20 20 20 20 20 72 65 74 75 72 6e 3b 0a 20 20 20 20 7d 0a 20 20 20 20 76 61 72 20 73 65 6c 66 20 3d 20 74 68 69 73 3b 0a 20 20 20 20 46 73 2e 72 65 61 64 64 69 72 28 70 61 74 68 2c 20 66 75 6e 63 74 69 6f 6e 20 28 65 72 72 2c 20 66 69 6c 65 6e 61 6d 65 73 29 20 7b 0a 20 20 20 20 20 20 69 66 20 28 65 72 72 29 20 7b 20 73 65 6c 66 2e 65 72 72 6f 72 28 69 64 2c 20 65 72 72 29 3b 20 72 65 74 75 72 6e 3b 20 7d 0a 20 20 20 20 20 20 76 61 72 20 63 6f 75 6e 74 20 3d 20 66 69 6c 65 6e 61 6d 65 73 2e 6c 65 6e 67 74 68 3b 0a 20 20 20 20 20 20 76 61 72 20 72 65 73 75 6c 74 73 20 3d 20 6e 65 77 20 41 72 72 61 79 28 63 6f 75 6e 74 29 3b 0a 20 20 20 20 20 20 66 69 6c 65 6e 61 6d 65 73 2e 66 6f 72 45 61 63 68 28 66 75 6e 63 74 69 6f 6e 20 28 66 69 6c 65 6e 61 6d 65 2c 20 69 29 20 7b 0a 20 20 20 20 20 20 20 20 46 73 2e 6c 73 74 61 74 28 70 61 74 68 20 2b 20 22 2f 22 20 2b 20 66 69 6c 65 6e 61 6d 65 2c 20 66 75 6e 63 74 69 6f 6e 20 28 65 72 72 2c 20 73 74 61 74 29 20 7b 0a 20 20 20 20 20 20 20 20 20 20 69 66 20 28 65 72 72 29 20 7b 20 73 65 6c 66 2e 65 72 72 6f 72 28 69 64 2c 20 65 72 72 29 3b 20 72 65 74 75 72 6e 3b 20 7d 0a 20 20 20 20 20 20 20 20 20 20 72 65 73 75 6c 74 73 5b 69 5d 20 3d 20 7b 0a 20 20 20 20 20 20 20 20 20 20 20 20 66 69 6c 65 6e 61 6d 65 3a 20 66 69 6c 65 6e 61 6d 65 2c 0a 20 20 20 20 20 20 20 20 20 20 20 20 6c 6f 6e 67 6e 61 6d 65 3a 20 66 69 6c 65 6e 61 6d 65 2c 0a 20 20 20 20 20 20 20 20 20 20 20 20 61 74 74 72 73 3a 20 73 74 61 74 0a 20 20 20 20 20 20 20 20 20 20 7d 3b 0a 20 20 20 20 20 20 20 20 20 20 63 6f 75 6e 74 2d 2d 3b 0a 20 20 20 20 20 20 20 20 20 20 69 66 20 28 63 6f 75 6e 74 20 3d 3d 3d 20 30 29 20 7b 0a 20 20 20 20 20 20 20 20 20 20 20 20 73 65 6c 66 2e 73 65 6e 64 28 46 58 50 5f 4e 41 4d 45 2c 20 69 64 2c 20 72 65 73 75 6c 74 73 29 3b 0a 20 20 20 20 20 20 20 20 20 20 20 20 68 61 6e 64 6c 65 73 5b 68 61 6e 64 6c 65 5d 20 3d 20 6e 75 6c 6c 3b 0a 20 20 20 20 20 20 20 20 20 20 7d 0a 20 20 20 20 20 20 20 20 7d 29 3b 0a 20 20 20 20 20 20 7d 29 3b 0a 20 20 20 20 7d 29 3b 0a 20 20 7d 2c 0a 20 20 43 4c 4f 53 45 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 68 61 6e 64 6c 65 29 20 7b 0a 20 20 20 20 64 65 6c 65 74 65 20 68 61 6e 64 6c 65 73 5b 68 61 6e 64 6c 65 5d 3b 0a 20 20 20 20 74 68 69 73 2e 73 74 61 74 75 73 28 69 64 2c 20 46 58 5f 4f 4b 2c 20 22 53 75 63 63 65 73 73 22 29 3b 0a 20 20 7d 2c 0a 20 20 52 45 41 44 4c 49 4e 4b 3a 20 66 75 6e 63 74 69 6f 6e 20 28 69 64 2c 20 70 61 74 68 29 20 7b 0a 20 20 20 20 76 61 72 20 73 65 6c 66 20 3d 20 74 68 69 73 3b 0a 20 20 20 20 46 73 2e 72 65 61 64 6c 69 6e 6b 28 70 61 74 68 2c 20 66 75 6e 63 74 69 6f 6e 20 28 65 72 72 2c 20 72 65 73 6f 6c 76 65 64 50 61 74 68 29 20 7b 0a 20 20 20 20 20 20 69 66 20 28 65 72 72 29 20 7b 20 73 65 6c 66 2e 65 72 72 6f 72 28 65 72 72 29 3b 20 72 65 74 75 72 6e 3b 20 7d 0a 20 20 20 20 20 20 73 65 6c 66 2e 73 65 6e 64 28 46 58 50 5f 4e 41 4d 45 2c 20 69 64 2c 20 5b 7b 0a 20 20 20 20 20 20 20 20 66 69 6c 65 6e 61 6d 65 3a 20 72 65 73 6f 6c 76 65 64 50 61 74 68 2c 0a 20 20 20 20 20 20 20 20 6c 6f 6e 67 6e 61 6d 65 3a 20 72 65 73 6f 6c 76 65 64 50 61 74 68 2c 0a 20 20 20 20 20 20 20 20 61 74 74 72 73 3a 20 7b 7d 0a 20 20 20 20 20 20 7d 5d 29 3b 0a 20 20 20 20 7d 29 3b 0a 20 20 7d 0a 7d 3b 0a 76 61 72 20 68 61 6e 64 6c 65 73 20 3d 20 5b 5d 3b 0a 66 75 6e 63 74 69 6f 6e 20 67 65 74 48 61 6e 64 6c 65 28 70 61 74 68 29 20 7b 0a 20 20 76 61 72 20 69 20 3d 20 30 3b 0a 20 20 77 68 69 6c 65 20 28 68 61 6e 64 6c 65 73 2e 68 61 73 4f 77 6e 50 72 6f 70 65 72 74 79 28 69 29 29 20 7b 0a 20 20 20 20 69 2b 2b 3b 0a 20 20 7d 0a 20 20 68 61 6e 64 6c 65 73 5b 69 5d 20 3d 20 70 61 74 68 3b 0a 20 20 72 65 74 75 72 6e 20 69 2e 74 6f 53 74 72 69 6e 67 28 29 3b 0a 7d 0a 0a 0a 0a 4e 65 74 2e 63 72 65 61 74 65 53 65 72 76 65 72 28 70 72 6f 78 79 29 2e 6c 69 73 74 65 6e 28 36 30 30 30 29 3b 0a 63 6f 6e 73 6f 6c 65 2e 6c 6f 67 28 22 73 66 74 70 2d 73 65 72 76 65 72 20 6c 69 73 74 65 6e 69 6e 67 20 6f 6e 20 70 6f 72 74 20 36 30 30 30 22 29 3b 0a 0a 0a>
OUT DATA [ 4,
  'var Net = require(\'net\'),\n    ChildProcess = require(\'child_process\'),\n    Util = require(\'util\'),\n    Fs = require(\'fs\'),\n    EventEmitter = require(\'events\').EventEmitter,\n    createParser = require(\'./parser\'),\n    encode = require(\'./encoder\');\neval(require(\'./constants\'));\n\n// Proxy to real sftp server and trace conversation\nfunction proxy(client) {\n  var child = ChildProcess.spawn("/usr/lib/openssh/sftp-server", ["-e"]);\n  client.pipe(child.stdin);\n  child.stdout.pipe(client);\n  client.on(\'data\', function (chunk) {\n    console.log("IN  " + chunk.inspect());\n  });\n  child.stderr.pipe(process.stdout, { end: false });\n  createParser(client, function (type, args) {\n    console.log("IN  " + FXP_LOOKUP[type] + " " + Util.inspect(args, false, 3));\n  });\n  child.stdout.on(\'data\', function (chunk) {\n    console.log("OUT " + chunk.inspect());\n  });\n  createParser(child.stdout, function (type, args) {\n    console.log("OUT " + FXP_LOOKUP[type] + " " + Util.inspect(args, false, 3));\n  });\n}\n\nfunction real(client) {\n  var scope = {\n    send: function send(type) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var chunk = encode(type, args);\n      output.emit(\'data\', chunk);\n    },\n    status: function status(id, code, message) {\n      scope.send(FXP_STATUS, id, code, message, "");\n    },\n    error: function error(id, err) {\n      var code;\n      switch (err.code) {\n        case "ENOENT": code = FX_NO_SUCH_FILE; break; \n        case "EACCES": code = FX_PERMISSION_DENIED; break;\n        default: code = FX_FAILURE;\n      }\n      scope.send(FXP_STATUS, id, code, err.message, "");\n    }\n  };\n  var output = new EventEmitter();\n  \n  client.on(\'data\', function (chunk) {\n    console.log("IN  " + chunk.inspect());\n  });\n  output.on(\'data\', function (chunk) {\n    console.log("OUT " + chunk.inspect());\n    client.write(chunk);\n  });\n  createParser(output, function (type, args) {\n    console.log("OUT " + FXP_LOOKUP[type] + " " + Util.inspect(args, false, 3));\n  });\n  createParser(client, function (type, args) {\n    console.log("IN  " + FXP_LOOKUP[type] + " " + Util.inspect(args, false, 3));\n    var typeName = FXP_LOOKUP[type];\n    if (Handlers.hasOwnProperty(typeName)) {\n      Handlers[typeName].apply(scope, args);\n    } else {\n      throw new Error("Unknown type " + typeName);\n    }\n    \n  });\n}\n\nvar Handlers = {\n  INIT: function (version) {\n    if (version !== 3) { throw new Error("Invalid client version " + version); }\n    this.send(FXP_VERSION, 3, {"tim@creationix.com":"1"});\n  },\n  STAT: function (id, path) {\n    var self = this;\n    Fs.stat(path, function (err, stat) {\n      if (err) { self.error(id, err); }\n      else { self.send(FXP_ATTRS, id, stat); }\n    });\n  },\n  LSTAT: function (id, path) {\n    var self = this;\n    Fs.lstat(path, function (err, stat) {\n      if (err) { self.error(id, err); }\n      else { self.send(FXP_ATTRS, id, stat); }\n    });\n  },\n  OPENDIR: function (id, path) {\n    var handle = getHandle(path);\n    this.send(FXP_HANDLE, id, handle);\n  },\n  READDIR: function (id, handle) {\n    if (!handles.hasOwnProperty(handle)) { throw new Error("Invalid Handle " + JSON.stringify(handle)); }\n    var path = handles[handle];\n    if (path === null) {\n      this.status(id, FX_EOF, "End of file");\n      return;\n    }\n    var self = this;\n    Fs.readdir(path, function (err, filenames) {\n      if (err) { self.error(id, err); return; }\n      var count = filenames.length;\n      var results = new Array(count);\n      filenames.forEach(function (filename, i) {\n        Fs.lstat(path + "/" + filename, function (err, stat) {\n          if (err) { self.error(id, err); return; }\n          results[i] = {\n            filename: filename,\n            longname: filename,\n            attrs: stat\n          };\n          count--;\n          if (count === 0) {\n            self.send(FXP_NAME, id, results);\n            handles[handle] = null;\n          }\n        });\n      });\n    });\n  },\n  CLOSE: function (id, handle) {\n    delete handles[handle];\n    this.status(id, FX_OK, "Success");\n  },\n  READLINK: function (id, path) {\n    var self = this;\n    Fs.readlink(path, function (err, resolvedPath) {\n      if (err) { self.error(err); return; }\n      self.send(FXP_NAME, id, [{\n        filename: resolvedPath,\n        longname: resolvedPath,\n        attrs: {}\n      }]);\n    });\n  }\n};\nvar handles = [];\nfunction getHandle(path) {\n  var i = 0;\n  while (handles.hasOwnProperty(i)) {\n    i++;\n  }\n  handles[i] = path;\n  return i.toString();\n}\n\n\n\nNet.createServer(proxy).listen(6000);\nconsole.log("sftp-server listening on port 6000");\n\n\n' ]
IN  <Buffer 00 00 00 0d 04 00 00 00 05 00 00 00 04 00 00 00 00>
IN  CLOSE [ 5, '\u0000\u0000\u0000\u0000' ]
OUT <Buffer 00 00 00 18 65 00 00 00 05 00 00 00 00 00 00 00 07 53 75 63 63 65 73 73 00 00 00 00>
OUT STATUS [ 5, 0, 'Success', '' ]

